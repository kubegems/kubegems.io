"use strict";(self.webpackChunkkubegems_docs=self.webpackChunkkubegems_docs||[]).push([[8443],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return g}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),m=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=m(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=m(n),g=r,k=c["".concat(i,".").concat(g)]||c[g]||u[g]||l;return n?a.createElement(k,o(o({ref:t},s),{},{components:n})):a.createElement(k,o({ref:t},s))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=c;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var m=2;m<l;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},23683:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return g},frontMatter:function(){return p},metadata:function(){return m},toc:function(){return u}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),o=["components"],p={slug:"kubegems-observ",title:"OpenTelemetry \u6280\u672f\u5206\u4eab Golang \u7bc7",authors:["jojotong"],tags:["opentelemetry","tracing","promtheus","loki","observability","kubernetes","kubegems"]},i=void 0,m={permalink:"/blog/kubegems-observ",source:"@site/blog/OpenTelemetry Golang Meetingup/2022-02-10-OpenTelemetry Golang Meetingup.md",title:"OpenTelemetry \u6280\u672f\u5206\u4eab Golang \u7bc7",description:"OpenTelemetry",date:"2022-02-10T00:00:00.000Z",formattedDate:"2022\u5e742\u670810\u65e5",tags:[{label:"opentelemetry",permalink:"/blog/tags/opentelemetry"},{label:"tracing",permalink:"/blog/tags/tracing"},{label:"promtheus",permalink:"/blog/tags/promtheus"},{label:"loki",permalink:"/blog/tags/loki"},{label:"observability",permalink:"/blog/tags/observability"},{label:"kubernetes",permalink:"/blog/tags/kubernetes"},{label:"kubegems",permalink:"/blog/tags/kubegems"}],readingTime:20.895,truncated:!1,authors:[{name:"jojotong",title:"developer@kubegems.io",url:"https://github.com/jojotong",imageURL:"https://github.com/jojotong.png",key:"jojotong"}],frontMatter:{slug:"kubegems-observ",title:"OpenTelemetry \u6280\u672f\u5206\u4eab Golang \u7bc7",authors:["jojotong"],tags:["opentelemetry","tracing","promtheus","loki","observability","kubernetes","kubegems"]},prevItem:{title:"KubeGems \u7528\u6237\u8ba4\u8bc1\u548c\u767b\u5f55\u8bbe\u8ba1",permalink:"/blog/kubegems-auth"}},s={authorsImageUrls:[void 0]},u=[{value:"OpenTelemetry",id:"opentelemetry",level:2},{value:"\u4f18\u70b9",id:"\u4f18\u70b9",level:4},{value:"\u7f3a\u70b9",id:"\u7f3a\u70b9",level:4},{value:"OpenTelemetry \u67b6\u6784",id:"opentelemetry-\u67b6\u6784",level:2},{value:"\u9879\u76ee\u7ec4\u7ec7\u7ed3\u6784",id:"\u9879\u76ee\u7ec4\u7ec7\u7ed3\u6784",level:3},{value:"Golang \u5b9e\u8df5\u6307\u5357",id:"golang-\u5b9e\u8df5\u6307\u5357",level:2},{value:"Trace\uff08stable\uff09",id:"tracestable",level:3},{value:"\u521d\u59cb\u5316",id:"\u521d\u59cb\u5316",level:4},{value:"\u91c7\u6837\u5668",id:"\u91c7\u6837\u5668",level:4},{value:"\u57cb\u70b9",id:"\u57cb\u70b9",level:4},{value:"\u8de8\u8fdb\u7a0b\u4f20\u64ad",id:"\u8de8\u8fdb\u7a0b\u4f20\u64ad",level:4},{value:"TraceContext",id:"tracecontext",level:5},{value:"Baggage",id:"baggage",level:5},{value:"\u7406\u89e3propagator",id:"\u7406\u89e3propagator",level:4},{value:"\u5176\u4ed6\u5f62\u5f0f\u7684propagator",id:"\u5176\u4ed6\u5f62\u5f0f\u7684propagator",level:4},{value:"Metrics\uff08alpha\uff09",id:"metricsalpha",level:3},{value:"\u521d\u59cb\u5316",id:"\u521d\u59cb\u5316-1",level:4},{value:"\u4f7f\u7528",id:"\u4f7f\u7528",level:4},{value:"Log (not implemented yet)",id:"log-not-implemented-yet",level:3},{value:"Kubegems\u63a5\u5165Opentelemetry",id:"kubegems\u63a5\u5165opentelemetry",level:2},{value:"\u793a\u4f8b\u7a0b\u5e8f",id:"\u793a\u4f8b\u7a0b\u5e8f",level:3},{value:"\u4ee3\u7801\u6f14\u793a",id:"\u4ee3\u7801\u6f14\u793a",level:3},{value:"kubegems\u529f\u80fd\u6f14\u793a",id:"kubegems\u529f\u80fd\u6f14\u793a",level:3},{value:"\u5e94\u7528\u6027\u80fd",id:"\u5e94\u7528\u6027\u80fd",level:4},{value:"trace\u8be6\u60c5",id:"trace\u8be6\u60c5",level:4},{value:"trace -&gt; log",id:"trace---log",level:4},{value:"log -&gt; monitor",id:"log---monitor",level:4}],c={toc:u};function g(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("iframe",{width:"360",height:"200",src:"https://www.youtube.com/embed/3i9dRLQxeaA",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),(0,l.kt)("iframe",{src:"//player.bilibili.com/player.html?aid=224241127&bvid=BV1m8411T7MG&cid=1002257669&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true",width:"360",height:"200"},"  "),(0,l.kt)("h2",{id:"opentelemetry"},"OpenTelemetry"),(0,l.kt)("p",null,"Opentelemetry \u662f\u4e00\u4e2aCNCF\u793e\u533a\u4e0b\u4e00\u4e2a\u5f00\u6e90\u7684\u53ef\u89c2\u6d4b\u6027\u6846\u67b6\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u8bf4\u662f\u4e00\u7ec4\u5de5\u5177\u3001API \u548c SDK \u7684\u96c6\u5408\uff0c\u6765\u68c0\u6d4b\u3001\u751f\u6210\u3001\u6536\u96c6\u548c\u5bfc\u51fa\u53ef\u89c2\u6d4b\u6027\u6570\u636e\uff08",(0,l.kt)("strong",{parentName:"p"},"\u6307\u6807\u3001\u65e5\u5fd7\u548c\u94fe\u8def"),"\uff09\uff0c\u4ee5\u5e2e\u52a9\u6211\u4eec\u5206\u6790\u8f6f\u4ef6\u7684\u6027\u80fd\u548c\u884c\u4e3a\u3002"),(0,l.kt)("h4",{id:"\u4f18\u70b9"},"\u4f18\u70b9"),(0,l.kt)("p",null,"\u8fc7\u53bb\uff0c\u68c0\u6d4b\u4ee3\u7801\u7684\u65b9\u5f0f\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u53ef\u89c2\u6d4b\u6027\u540e\u7aef\u90fd\u6709\u81ea\u5df1\u7684\u68c0\u6d4b\u5e93\u548c\u4ee3\u7406\uff0c\u7528\u4e8e\u5411\u5de5\u5177\u53d1\u9001\u6570\u636e\u3002"),(0,l.kt)("p",null,"\u8fd9\u610f\u5473\u7740\u6ca1\u6709\u7528\u4e8e\u5c06\u6570\u636e\u53d1\u9001\u5230\u53ef\u89c2\u5bdf\u6027\u540e\u7aef\u7684\u6807\u51c6\u5316\u6570\u636e\u683c\u5f0f\uff0c\u7531\u4e8e\u7f3a\u4e4f\u6807\u51c6\u5316\uff0c\u6700\u7ec8\u7ed3\u679c\u662f\u7f3a\u4e4f\u6570\u636e\u53ef\u79fb\u690d\u6027\u548c\u7528\u6237\u7ef4\u62a4\u4eea\u5668\u5e93\u7684\u8d1f\u62c5\u3002"),(0,l.kt)("p",null,"Opentelemetry\u56e0\u6b64\u800c\u751f\uff0c\u62e5\u6709\u6765\u81ea\u4e91\u63d0\u4f9b\u5546\u3001 ",(0,l.kt)("a",{parentName:"p",href:"https://opentelemetry.io/ecosystem/vendors/"},"\u4f9b\u5e94\u5546"),"\u548c\u6700\u7ec8\u7528\u6237\u7684\u5e7f\u6cdb\u884c\u4e1a\u652f\u6301\u548c\u91c7\u7528\uff0c\u63d0\u4f9b\u4e86\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/instrumentation"},"\u6bcf\u79cd\u8bed\u8a00"),"\u90fd\u6709\u4e00\u4e2a\u72ec\u7acb\u4e8e\u4f9b\u5e94\u5546\u7684instrumentation library \uff0c\u652f\u6301\u81ea\u52a8\u548c\u624b\u52a8\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u53ef\u4ee5\u4ee5\u591a\u79cd\u65b9\u5f0f\u90e8\u7f72\u7684\u5355\u4e2a\u4f9b\u5e94\u5546\u4e2d\u7acb\u7684",(0,l.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/collector"},"\u6536\u96c6\u5668\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u751f\u6210\u3001\u53d1\u51fa\u3001\u6536\u96c6\u3001\u5904\u7406\u548c\u5bfc\u51fa\u9065\u6d4b\u6570\u636e\u7684\u7aef\u5230\u7aef\u5b9e\u73b0\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5b8c\u5168\u63a7\u5236\u60a8\u7684\u6570\u636e\uff0c\u80fd\u591f\u901a\u8fc7\u914d\u7f6e\u5c06\u6570\u636e\u5e76\u884c\u53d1\u9001\u5230\u591a\u4e2a\u76ee\u7684\u5730\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5f00\u653e\u6807\u51c6\u8bed\u4e49\u7ea6\u5b9a\u4ee5\u786e\u4fdd\u4e0e\u4f9b\u5e94\u5546\u65e0\u5173\u7684\u6570\u636e\u6536\u96c6")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u80fd\u591f\u5e76\u884c\u652f\u6301\u591a\u79cd ",(0,l.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/reference/specification/overview/#context-propagation"},"\u4e0a\u4e0b\u6587\u4f20\u64ad")," \u683c\u5f0f\uff0c\u4ee5\u534f\u52a9\u968f\u7740\u6807\u51c6\u7684\u53d1\u5c55\u8fdb\u884c\u8fc1\u79fb\u3002"))),(0,l.kt)("h4",{id:"\u7f3a\u70b9"},"\u7f3a\u70b9"),(0,l.kt)("p",null,"\u6709\u522b\u4e8e Istio \uff0c\u5b83\u5e76\u4e0d\u662f\u4e00\u4e2a\u5f00\u7bb1\u5373\u7528\u7684\u5de5\u5177\uff0c\u4e5f\u662f\u66f4\u6709\u4fb5\u5165\u6027\u7684\uff0c\u4f46\u662f\u6839\u636e\u6211\u4eec\u7684\u7ecf\u9a8c\uff1a"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u8d8a\u4e0d\u5177\u4fb5\u5165\u6027\u7684\u5de5\u5177\uff0c\u5c31\u8d8a\u65e0\u6cd5\u505a\u51fa\u66f4\u6df1\u66f4\u5e7f\u7684\u89c2\u6d4b")),(0,l.kt)("p",null,"\u6211\u4eec\u4e3a\u4e86\u83b7\u53d6\u66f4\u6df1\u3001\u66f4\u5e7f\u7684\u6307\u6807\uff0c\u52bf\u5fc5\u8981\u4fb5\u5165\u6027\u5730\u8fdb\u884c\u89c2\u6d4b\uff0c\u56e0\u6b64\uff0c\u91c7\u7528Istio envoy\u63d0\u4f9b\u7684\u6307\u6807\u662f\u4e0d\u591f\u7684\u3002\u800c\u6b64\u65f6\uff0cOpentelemetry\u6b63\u5728\u9010\u6e10\u5f62\u6210\u884c\u4e1a\u6807\u51c6\uff0c\u53d7\u5230\u8bb8\u591a\u4f9b\u5e94\u5546\u652f\u6301\uff0c\u662f\u6211\u4eec\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002"),(0,l.kt)("h2",{id:"opentelemetry-\u67b6\u6784"},"OpenTelemetry \u67b6\u6784"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/otel_diagram.png",alt:"OpenTelemetry Reference Architecture"})),(0,l.kt)("p",null,"\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u6574\u4f53\u7684\u7ec4\u7ec7\u67b6\u6784\u5b9e\u9645\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e24\u90e8\u5206:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u5c06\u53ef\u89c2\u6d4b\u6027\u6570\u636e(trace, metric, log)\u5168\u90e8\u5bfc\u51fa\uff08",(0,l.kt)("strong",{parentName:"li"},"push"),"\uff09\u5230 ",(0,l.kt)("inlineCode",{parentName:"li"},"otel collector"),"\uff0c\u65e0\u8bba\u4f60\u662f\u901a\u8fc7\u4ec0\u4e48\u5f62\u5f0f\uff0c\u6765\u81ea\u4ec0\u4e48\u7ec4\u4ef6\uff0c\u5982:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u4ece\u9879\u76ee\u4ee3\u7801\u901a\u8fc7",(0,l.kt)("inlineCode",{parentName:"p"},"otlp"),"\u534f\u8bae\u5bfc\u51fa"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u8bed\u8a00\uff1ago, java, python..."),(0,l.kt)("li",{parentName:"ul"},"\u96c6\u6210\u65b9\u5f0f: auto/manual instrumentation, api, sdk")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"# example config for otel collector's receivers\nreceivers:\n otlp:\n   protocols:\n     grpc:\n       endpoint: 0.0.0.0:4317\n     http:\n       endpoint: 0.0.0.0:4318\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7\u57fa\u7840\u8bbe\u65bd(\u672c\u8d28\u4e0a\u8fd8\u662f\u901a\u8fc7\u5e94\u7528\u7a0b\u5e8f\u5bfc\u51fa)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"k8s"),(0,l.kt)("li",{parentName:"ul"},"aws"),(0,l.kt)("li",{parentName:"ul"},"others..."))),(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7\u5176\u4ed6\u670d\u52a1\uff0c\u76f4\u63a5\u5c06\u4e00\u4e9b\u670d\u52a1\u6570\u636e\u5bfc\u51fa\u5230",(0,l.kt)("inlineCode",{parentName:"li"},"otel collector"),"\uff0c\u5982",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"prometheus"),(0,l.kt)("li",{parentName:"ul"},"jarger"),(0,l.kt)("li",{parentName:"ul"},"others...")))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u6309\u9700\u6c42\u5bfc\u51fa(",(0,l.kt)("strong",{parentName:"p"},"push or pull"),")\u5230\u5177\u4f53\u7684\u53ef\u89c2\u6d4b\u6027\u5de5\u5177\uff0c\u5982"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"metrics \u6307\u6807\u53ef\u4ee5\u5bfc\u51fa\u81f3\u76d1\u63a7\u670d\u52a1(\u5982\u901a\u8fc7prometheues)"),(0,l.kt)("li",{parentName:"ul"},"trace \u6307\u6807\u53ef\u4ee5\u5bfc\u51fa\u81f3\u94fe\u8def\u8ffd\u8e2a\u670d\u52a1(\u5982jaeger)"),(0,l.kt)("li",{parentName:"ul"},"log \u6307\u6807\u53ef\u4ee5\u5bfc\u51fa\u81f3\u65e5\u5fd7\u670d\u52a1(\u5982loki)")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"# example config for otel collector's exporters\nexporters:\n jaeger:\n   endpoint: jaeger-operator-jaeger-collector.observability:14250\n   tls:\n     insecure: true\n loki:\n   endpoint: http://localhost:3100/loki/api/v1/push\n prometheus:\n   endpoint: 0.0.0.0:8889\n   resource_to_telemetry_conversion:\n     enabled: true\n")),(0,l.kt)("h3",{id:"\u9879\u76ee\u7ec4\u7ec7\u7ed3\u6784"},"\u9879\u76ee\u7ec4\u7ec7\u7ed3\u6784"),(0,l.kt)("p",null,"Opentelemetry\u9879\u76ee\u7ec4\u7ec7\u7ed3\u6784\u7e41\u591a\u800c\u590d\u6742\uff0c\u5b98\u65b9\u5171\u670959\u4e2arepo\uff0c\u4f46\u6211\u53ef\u4ee5\u5927\u81f4\u6309\u4ee5\u4e0b\u7ed3\u6784\u8fdb\u884c\u68b3\u7406:"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/image-20230209133513547.png",alt:null})),(0,l.kt)("p",null,"\u9996\u5148\uff0cOpentelemetry\u63d0\u4f9b\u4e86\u5b98\u65b9\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"opentelemetry-collector"),"\uff0c\u4f5c\u4e3a\u6574\u4e2a\u9879\u76ee\u7684\u6838\u5fc3\u4ed3\u5e93\uff0c\u7528\u4ee5\u6574\u548c\u6240\u6709\u53ef\u89c2\u6d4b\u6027\u6307\u6807\uff0c\u4e5f\u6574\u5408\u4e86",(0,l.kt)("inlineCode",{parentName:"p"},"opentelemetry-collector-contrib"),"\u63d0\u4f9b\u7684\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u8fd9\u4e24\u4e2a\u9879\u76ee\u7edf\u4e00\u6784\u6210",(0,l.kt)("inlineCode",{parentName:"p"},"collector"),"\uff0c\u4f46\u662f\u4f5c\u4e3a\u5f00\u53d1\u8005\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u8fc7\u591a\u5173\u5fc3\u3002"),(0,l.kt)("p",null,"\u7136\u540e\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u8bed\u8a00\uff0c\u57fa\u672c\u6bcf\u79cd\u8bed\u8a00\u90fd\u63d0\u4f9b\u4e86\u4e09\u4e2a\u4ed3\u5e93\u4f5c\u4ee5\u4e0b\u7528\u9014:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"\u6838\u5fc3\u4ed3\u5e93(\u9ec4\u8272)"),": \u63d0\u4f9b\u8be5\u8bed\u8a00\u7684\u57fa\u7840SDK\uff0c\u4e3a",(0,l.kt)("inlineCode",{parentName:"p"},"instrumentation"),"\u548c",(0,l.kt)("inlineCode",{parentName:"p"},"contrib"),"\u4ed3\u5e93\u63d0\u4f9b\u63a5\u5165\u7684\u7edf\u4e00\u6807\u51c6\uff0c\u901a\u8fc7\u8fd9\u4e2a\u4ed3\u5e93\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u4e0d\u4f7f\u7528\u4ee5\u4e0b\u4e24\u4e2a\u5e93\u7684\u60c5\u51b5\u4e0b\u63a5\u5165opentelemetry\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"instrumentation(\u7eff\u8272)"),": \u7279\u5b9a\u7684\u8bed\u8a00\u5b9e\u73b0\uff0c\u901a\u8fc7\u5b83\uff0c\u4f60\u53ef\u4ee5\u5728\u4e0d\u751a\u4e86\u89e3otel\u7684\u60c5\u51b5\u4e0b\uff0c\u5b9e\u73b0",(0,l.kt)("strong",{parentName:"p"},"\u4e00\u4f53\u5316\u3001\u5f00\u7bb1\u5373\u7528\u5730\u3001\u4e00\u952e\u5730"),"\u4e3a\u4f60\u7684\u5de5\u7a0b\u5f15\u5165opentelemetry\u3002"),(0,l.kt)("p",{parentName:"li"},"\u5982",(0,l.kt)("inlineCode",{parentName:"p"},"opentelemetry-java-instrumentation"),"\u53ef\u4ee5\u76f4\u63a5\u4ee5"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"java -javaagent:path/to/opentelemetry-javaagent.jar \\\n     -jar myapp.jar\n")),(0,l.kt)("p",{parentName:"li"},"\u7684\u5f62\u5f0f\u63a5\u5165opentelemetry\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"contrib(\u84dd\u8272)"),": \u63d0\u4f9b\u4e00\u4e9b\u4e3a\u7b2c\u4e09\u65b9\u5e93\u4ee5\u76f8\u5bf9\u4fbf\u6377\u7684\u5f62\u5f0f\u63a5\u5165Opentelemetry\u7684\u5e93\u3002"),(0,l.kt)("p",{parentName:"li"},"\u5982",(0,l.kt)("inlineCode",{parentName:"p"},"opentelemetry-go-contrib"),"\u63d0\u4f9b\u4e86\u9488\u5bf9",(0,l.kt)("inlineCode",{parentName:"p"},"gin"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"beego"),"\u6846\u67b6\u7b49\u7b2c\u4e09\u65b9\u5e93\u63a5\u5165opentelemetry\u7684\u4fbf\u6377\u65b9\u6cd5\u3002"))),(0,l.kt)("h2",{id:"golang-\u5b9e\u8df5\u6307\u5357"},"Golang \u5b9e\u8df5\u6307\u5357"),(0,l.kt)("h3",{id:"tracestable"},"Trace\uff08stable\uff09"),(0,l.kt)("h4",{id:"\u521d\u59cb\u5316"},"\u521d\u59cb\u5316"),(0,l.kt)("p",null,"\u6211\u4eec\u9700\u8981\u6784\u9020\u4e00\u4e2a\u5168\u5c40\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"TraceProvider"),"\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u6784\u9020\u7684provider \u91c7\u7528\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"http exporter"),"\uff0c\u5373\u5c06traces\u901a\u8fc7http\u534f\u8bae\u53d1\u9001\u7ed9\u6307\u5b9a\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"opentelemetry-collector")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "context"\n    "go.opentelemetry.io/otel"\n    "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp"\n    "go.opentelemetry.io/otel/propagation"\n    sdktrace "go.opentelemetry.io/otel/sdk/trace"\n)\n\nfunc initTracer(ctx context.Context) (*sdktrace.TracerProvider, error) {\n    exp, err := otlptracehttp.New(ctx)\n    if err != nil {\n        return nil, err\n    }\n    tp := sdktrace.NewTracerProvider(\n        sdktrace.WithSampler(sdktrace.AlwaysSample()),\n        sdktrace.WithBatcher(exp),\n    )\n    otel.SetTracerProvider(tp)\n    otel.SetTextMapPropagator(propagation.TraceContext{})\n    return tp, nil\n}\n')),(0,l.kt)("p",null,"\u6ce8\u610f: "),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u5168\u5c40",(0,l.kt)("inlineCode",{parentName:"li"},"TraceProvider"),"\u901a\u8fc7",(0,l.kt)("inlineCode",{parentName:"li"},"otel.SetTracerProvider()"),"\u8bbe\u7f6e\uff0c\u83b7\u53d6\u65f6\uff0c\u4e5f\u53ef\u76f4\u63a5\u8c03",(0,l.kt)("inlineCode",{parentName:"li"},"otel.GetTracerProvider()"),"\u3002")),(0,l.kt)("p",null,"\u6211\u5efa\u8bae\u5927\u5bb6\u76f4\u63a5\u8bbe\u7f6e\u4e3a\u5168\u5c40\u7684\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3a\u5c40\u90e8\u53d8\u91cf\u4f20\u6765\u4f20\u53bb\u7684\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u5f53\u6211\u4eec\u5f15\u7528\u4e86\u7b2c\u4e09\u65b9\u5e93\uff0c\u5b83\u901a\u5e38\u4e5f\u4f1a\u9ed8\u8ba4\u4f7f\u7528\u5168\u5c40\u7684provider\uff0c\u8fd9\u6837\u5c31\u80fd\u7b80\u5355\u7684\u4fdd\u8bc1\u6211\u4eec\u4e00\u4e2a\u7a0b\u5e8f\u53ea\u6709\u4e00\u4e2aprovider\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u4f1a\u628a\u6570\u636e\u53d1\u9001\u5230\u4e00\u4e2acollector\u3002"),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"\u521d\u59cb\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u9700\u8981\u6307\u5b9a ",(0,l.kt)("inlineCode",{parentName:"li"},"opentelemetry-collector endpoint"),"\u7b49\u914d\u7f6e\uff0c\u6211\u4eec\u7edf\u4e00\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6ce8\u5165\u3002\u5982\uff1a")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"otlptracehttp.WithEndpoint()")," => ",(0,l.kt)("inlineCode",{parentName:"li"},"OTEL_EXPORTER_OTLP_ENDPOINT")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"otlptracehttp.WithInsecure")," => ",(0,l.kt)("inlineCode",{parentName:"li"},"OTEL_EXPORTER_OTLP_INSECURE"))),(0,l.kt)("p",null,"\u652f\u6301\u7684\u73af\u5883\u53d8\u91cf\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u57fa\u7840\u914d\u7f6e: ",(0,l.kt)("a",{parentName:"li",href:"https://opentelemetry.io/docs/concepts/sdk-configuration/general-sdk-configuration/"},"https://opentelemetry.io/docs/concepts/sdk-configuration/general-sdk-configuration/")),(0,l.kt)("li",{parentName:"ul"},"\u5bfc\u51fa\u5668: ",(0,l.kt)("a",{parentName:"li",href:"https://opentelemetry.io/docs/concepts/sdk-configuration/otlp-exporter-configuration/"},"https://opentelemetry.io/docs/concepts/sdk-configuration/otlp-exporter-configuration/"))),(0,l.kt)("h4",{id:"\u91c7\u6837\u5668"},"\u91c7\u6837\u5668"),(0,l.kt)("p",null,"Go SDK \u63d0\u4f9b\u4e86\u51e0\u4e2a\u57fa\u672c\u7684\u91c7\u6837\u5668:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"AlwaysSample()"),": \u5168\u90e8\u91c7\u6837"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"NeverSample()"),": \u5168\u90e8\u4e22\u5f03"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TraceIDRatioBased(fraction float64)"),": \u8bbe\u7f6e\u91c7\u6837\u7387"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ParentBased(root Sampler, samplers ...ParentBasedSamplerOption)"),": \u57fa\u4e8eparent span \u8bbe\u7f6e\u91c7\u6837\u7b56\u7565")),(0,l.kt)("p",null,"\u9664\u6b64\u4e4b\u5916\uff0c\u6839\u636e",(0,l.kt)("inlineCode",{parentName:"p"},"Sampler"),"\u63a5\u53e3\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"// Sampler decides whether a trace should be sampled and exported.\ntype Sampler interface {\n    // DO NOT CHANGE: any modification will not be backwards compatible and\n    // must never be done outside of a new major release.\n\n    // ShouldSample returns a SamplingResult based on a decision made from the\n    // passed parameters.\n    ShouldSample(parameters SamplingParameters) SamplingResult\n    // DO NOT CHANGE: any modification will not be backwards compatible and\n    // must never be done outside of a new major release.\n\n    // Description returns information describing the Sampler.\n    Description() string\n    // DO NOT CHANGE: any modification will not be backwards compatible and\n    // must never be done outside of a new major release.\n}\n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u91c7\u6837\u5668\uff0ceg:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "go.opentelemetry.io/otel"\n    sdktrace "go.opentelemetry.io/otel/sdk/trace"\n)\n\n// kubegems sampler, ignore samples whitch contains "kubegems.ignore" attrbute.\ntype kubegemsSampler struct{}\n\nfunc (as kubegemsSampler) ShouldSample(p sdktrace.SamplingParameters) sdktrace.SamplingResult {\n    result := sdktrace.SamplingResult{\n        Tracestate: trace.SpanContextFromContext(p.ParentContext).TraceState(),\n    }\n    shouldSample := true\n    for _, att := range p.Attributes {\n        if att.Key == "kubegems.ignore" && att.Value.AsBool() == true {\n            shouldSample = false\n            break\n        }\n    }\n    if shouldSample {\n        result.Decision = sdktrace.RecordAndSample\n    } else {\n        result.Decision = sdktrace.Drop\n    }\n    return result\n}\n\nfunc (as kubegemsSampler) Description() string {\n    return "KubegemsSampler"\n}\n\n')),(0,l.kt)("p",null,"\u4f7f\u7528\u91c7\u6837\u5668\u65f6\uff0c\u6211\u4eec\u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u95ee\u9898\uff1a"),(0,l.kt)("p",null,"\u5047\u5982\u6709\u4e24\u4e2a\u670d\u52a1\u4e3aA\uff0cB\uff0c \u8c03\u7528\u5173\u7cfb\u4e3a A -> B, \u6211\u4eec\u60f3\u8981\u4e3a\u5176\u8bbe\u7f6e\u91c7\u6837\u7387\u4e3a50%\uff0c\u600e\u4e48\u8bbe\uff1f"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u76f4\u63a5\u4e3a\u4e24\u4e2a\u670d\u52a1\u90fd\u8bbe\u7f6e"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-go"},"sdktrace.WithSampler(sdktrace.TraceIDRatioBased(0.5))\n")),(0,l.kt)("p",{parentName:"li"},"\u8fd9\u6837\u8bbe\u7f6e\u540e\uff0cA\u7684\u91c7\u6837\u7387\u81ea\u7136\u662f50%\uff0c\u4f46B\u7684\u91c7\u6837\u7387\u5e76\u4e0d\u4f1a\u6210\u4e8625%\uff0c\u6d4b\u8bd5\u53d1\u73b0\u5b83\u4ecd\u7136\u662f50%\u3002\u6211\u4eec\u53ef\u4ee5\u67e5\u9605",(0,l.kt)("a",{parentName:"p",href:"https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#traceidratiobased"},"\u8bbe\u8ba1\u6587\u6863"),"\uff1a"),(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("ul",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"TraceIdRatioBased")," MUST ignore the parent ",(0,l.kt)("inlineCode",{parentName:"li"},"SampledFlag"),". To respect the parent ",(0,l.kt)("inlineCode",{parentName:"li"},"SampledFlag"),", the ",(0,l.kt)("inlineCode",{parentName:"li"},"TraceIdRatioBased")," should be used as a delegate of the ",(0,l.kt)("inlineCode",{parentName:"li"},"ParentBased")," sampler specified below."))),(0,l.kt)("p",{parentName:"li"},"\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83",(0,l.kt)("strong",{parentName:"p"},"\u53ea\u4f1a\u6839\u636eparent span\u6765\u51b3\u5b9a\u662f\u5426\u88ab\u91c7\u6837"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"ParentBased"),"\u91c7\u6837\u5668\uff08\u6700\u597d\u7684\u65b9\u6cd5\uff09"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-go"},"sdktrace.WithSampler(sdktrace.ParentBased(sdktrace.TraceIDRatioBased(0.5))),\n")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"ParentBased Sampler"),"\u663e\u5f0f\u5730\u914d\u7f6e\u6709",(0,l.kt)("inlineCode",{parentName:"p"},"parent span"),"\u60c5\u51b5\u4e0b\u5730\u91c7\u6837\u7b56\u7565\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5982\u4e0b\u7b56\u7565\uff1a"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func configureSamplersForParentBased(samplers []ParentBasedSamplerOption) samplerConfig {\n    c := samplerConfig{\n        remoteParentSampled:    AlwaysSample(),\n        remoteParentNotSampled: NeverSample(),\n        localParentSampled:     AlwaysSample(),\n        localParentNotSampled:  NeverSample(),\n    }\n\n    for _, so := range samplers {\n        c = so.apply(c)\n    }\n\n    return c\n}\n")),(0,l.kt)("p",{parentName:"li"},"\u4ee5",(0,l.kt)("inlineCode",{parentName:"p"},"\t\tremoteParentSampled:    AlwaysSample()"),"\u4e3a\u4f8b\uff1a\u5b83\u662f\u8bf4\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u8fd9\u4e2aspan\u6765\u81ea\u8fdc\u7a0b\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"parent span"),"\uff0c\u800c\u4e14",(0,l.kt)("inlineCode",{parentName:"p"},"parent spane"),"\u5df2\u7ecf\u88ab\u91c7\u6837\u4e86\uff0c\u90a3\u4e48\uff0c\u8fd9\u4e2aspan\u4e5f\u4f1a\u88ab\u91c7\u6837\u3002"),(0,l.kt)("p",{parentName:"li"},"\u6211\u4eec\u4e5f\u53ef\u4ee5\u8c03\u6574",(0,l.kt)("inlineCode",{parentName:"p"},"ParentBasedSamplerOption"),"\u53c2\u6570\uff0ceg:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-go"},"sdktrace.WithSampler(sdktrace.ParentBased(sdktrace.TraceIDRatioBased(0.5), sdktrace.WithRemoteParentSampled(sdktrace.NeverSample()))),\n")),(0,l.kt)("p",{parentName:"li"},"\u5b83\u8868\u793a\uff0c\u5f53",(0,l.kt)("inlineCode",{parentName:"p"},"parent span"),"\u88ab\u91c7\u6837\u65f6\uff0c\u81ea\u5df1\u4e0d\u91c7\u6837\uff0c\u5f53\u7136\uff0c\u8fd9\u662f\u4e0d\u5408\u7406\u7684\u3002"))),(0,l.kt)("h4",{id:"\u57cb\u70b9"},"\u57cb\u70b9"),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u5728\u60f3\u8981\u8bb0\u5f55trace\u7684\u5730\u65b9\uff0c\u901a\u8fc7",(0,l.kt)("inlineCode",{parentName:"p"},"tracer.Start()"),"\u521b\u5efa\u4e00\u4e2a\u65b0span\u6765\u57cb\u70b9\u3002"),(0,l.kt)("p",null,"\u5f53\u7136\uff0c\u5728span\u4e2d\uff0c\u6211\u53ef\u4ee5\u4e3b\u8981\u53ef\u4ee5\u6dfb\u52a0\u4ee5\u4e0b\u51e0\u7c7b\u4fe1\u606f\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"SetAttributes"),": \u8bbe\u7f6e\u4e00\u4e9b\u5c5e\u6027(\u8bb0\u5f55\u4e3atag)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"AddEvent"),": \u6dfb\u52a0\u4e8b\u4ef6(\u8bb0\u5f55\u4e3alog)\uff0c \u901a\u5e38\u7528\u6765\u8bb0\u5f55\u4e00\u4e9b\u91cd\u8981\u64cd\u4f5c")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"SetStatus"),": \u8bbe\u7f6espan\u72b6\u6001\u3002"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'// get user name by user id\nfunc getUser(ctx context.Context, id string) (string, error) {\n    // start a new span from context.\n    newCtx, span := tracer.Start(ctx, "getUser", trace.WithAttributes(attribute.String("user.id", id)))\n    defer span.End()\n    // add start event\n    span.AddEvent("start to get user",\n        trace.WithTimestamp(time.Now()),\n    )\n    var username string\n    // get user name from db, if you want to trace it, `WithContext` is necessary.\n    result := getDB().WithContext(newCtx).Raw(`select username from users where id = ?`, id).Scan(&username)\n    if result.Error != nil || result.RowsAffected == 0 {\n        err := fmt.Errorf("user %s not found", id)\n        span.SetStatus(codes.Error, err.Error())\n        return "", err\n    }\n    // set user info in span\'s attributes\n    span.SetAttributes(attribute.String("user.name", username))\n    // add end event\n    span.AddEvent("end to get user",\n        trace.WithTimestamp(time.Now()),\n        trace.WithAttributes(attribute.String("user.name", username)),\n    )\n    span.SetStatus(codes.Ok, "")\n    return username, nil\n}\n')),(0,l.kt)("p",null,"\u5c4a\u65f6\uff0cspan\u5927\u6982\u957f\u8fd9\u4e2a\u6837\u5b50:"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/image-20230209175821923.png",alt:null})),(0,l.kt)("p",null,"\u53e6\u5916\uff0c\u5173\u4e8espan\u7684\u7236\u5b50\u5173\u7cfb\uff0c\u662f\u901a\u8fc7context\u4e0a\u4e0b\u6587\u6765\u4f20\u9012\u7684\u3002"),(0,l.kt)("p",null,"\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"tracer.Start(ctx context.Context, ...)"),"\u4e2d\uff0c\u5982\u679c\u4f20\u5165\u7684ctx \u4e2d\u6ca1\u6709span\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u5c31\u662f",(0,l.kt)("inlineCode",{parentName:"p"},"root span"),"\uff1b\u5982\u679c\u6709\uff0c\u90a3\u8fd4\u56de\u7684\u5c31\u662f\u8be5span\u7684\u5b50span\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u56e0\u6b64\uff0c\u6211\u4eec\u80fd\u901a\u8fc7context\u4e32\u8054\u8d77\u6e05\u6670\u7684\u94fe\u8def\u8c03\u7528\uff0c\u4f46\u4e5f\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u975e\u5e38\u5173\u6ce8context\u7684\u4f7f\u7528\u3002")),(0,l.kt)("h4",{id:"\u8de8\u8fdb\u7a0b\u4f20\u64ad"},"\u8de8\u8fdb\u7a0b\u4f20\u64ad"),(0,l.kt)("p",null,"Openletemetry \u63d0\u4f9b ",(0,l.kt)("inlineCode",{parentName:"p"},"propagator"),"\u5728\u8fdb\u7a0b\u95f4\u4ea4\u6362\u7684\u6d88\u606f\u4e2d\u8bfb\u53d6\u548c\u5199\u5165\u4e0a\u4e0b\u6587\u6570\u636e\u7684\u5bf9\u8c61\uff0c\u8be6\u89c1 ",(0,l.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/reference/specification/context/api-propagators/"},"https://opentelemetry.io/docs/reference/specification/context/api-propagators/")),(0,l.kt)("p",null,"Openletemetry \u5b9e\u73b0\u4e86\u4e24\u79cdpropagator API\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TraceContext"),":  \u7528\u4ee5\u4f20\u64ad",(0,l.kt)("inlineCode",{parentName:"li"},"traceparent"),"\u548c",(0,l.kt)("inlineCode",{parentName:"li"},"tracestate"),"\u4fe1\u606f\u6765\u4fdd\u8bc1\u4e00\u6761trace\u7684\u8c03\u7528\u4fe1\u606f\u4e0d\u4f1a\u56e0\u4e3a\u8de8\u8fdb\u7a0b\u800c\u4e2d\u65ad"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Baggage"),": \u7528\u4ee5\u4f20\u64ad\u7528\u6237\u81ea\u5b9a\u4e49\u4fe1\u606f")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"propagator"),"\u5b9e\u73b0\u4e24\u4e2a\u65b9\u6cd5\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Inject(ctx context.Context, carrier TextMapCarrier)"),": Injects the value into a carrier. For example, into the headers of an HTTP request."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Extract(ctx context.Context, carrier TextMapCarrier) context.Context"),": Extracts the value from an incoming request. For example, from the headers of an HTTP request.")),(0,l.kt)("h5",{id:"tracecontext"},"TraceContext"),(0,l.kt)("p",null,"\u4f7f\u7528TraceContext\u5728\u4e0b\u6e38",(0,l.kt)("inlineCode",{parentName:"p"},"Inject"),"\u548c\u4e0a\u6e38",(0,l.kt)("inlineCode",{parentName:"p"},"Extract"),"\u6765\u6253\u901a\u670d\u52a1\u95f4\u8c03\u7528\u94fe\u8def, eg:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u8bbe\u7f6epropagater:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"    otel.SetTextMapPropagator(propagation.TraceContext{})\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"client: ")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "net/http"\n    "go.opentelemetry.io/otel"\n    "go.opentelemetry.io/otel/propagation"\n)\n\nfunc DoRequest(){\n    ...\n    req, err := http.NewRequestWithContext(ctx, method, addr, body)\n    // inject to http.Request by propagator to do distribute tracing\n    otel.GetTextMapPropagator().Inject(req.Context(), propagation.HeaderCarrier(req.Header))\n    http.DefaultClient.Do(req)\n    ...   \n}\n')),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"server:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "go.opentelemetry.io/otel/propagation"\n)   \n\nfunc HandleRequest(){\n    ...\n    // extract from http.Request by propagator to do distribute tracing\n    ctx := cfg.Propagators.Extract(req.Context(), propagation.HeaderCarrier(req.Header))\n    ctx, span := tracer.Start(ctx, spanName, opts...)\n    defer span.End()\n    req = req.WithContext(ctx)\n    ...\n}\n')),(0,l.kt)("p",null,"\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e",(0,l.kt)("inlineCode",{parentName:"p"},"TraceContext"),"\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u9605\u8bfb\u6587\u6863\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/trace-context/%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E9%81%B5%E4%BB%8E%60W3C"},"https://www.w3.org/TR/trace-context/\uff0c\u56e0\u4e3a\u5b83\u9075\u4ece`W3C")," Trace Context format`\u6807\u51c6\u3002"),(0,l.kt)("h5",{id:"baggage"},"Baggage"),(0,l.kt)("p",null,"\u4f7f\u7528Baggage\u5728\u8fdb\u7a0b\u95f4\u4f20\u9012\u4fe1\u606f\uff0c\u5728\u4f7f\u7528\u5b83\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5f04\u6e05\u695a\u4e24\u4e2a\u95ee\u9898\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981 Baggage?")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5728\u6574\u6761trace\u4e2d\u4f20\u64ad\u4fe1\u606f"),(0,l.kt)("li",{parentName:"ul"},"\u5047\u5982\u6211\u4eec\u5e0c\u671b\u5c06\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4fe1\u606f\u9644\u52a0\u5230\u4e00\u4e2a span\uff0c \u5e76\u5728\u7a0d\u540e\u68c0\u7d22\u8be5\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u5176\u7528\u4e8e\u53e6\u4e00\u4e2a span\u3002\u7531\u4e8espan\u4e00\u7ecf\u521b\u5efa\u5c31\u4e0d\u80fd\u4fee\u6539\uff0c\u800cBaggage \u5141\u8bb8\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e2a\u5b58\u50a8\u548c\u68c0\u7d22\u4fe1\u606f\u7684\u5730\u65b9\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Baggage\u5e94\u8be5\u7528\u6765\u505a\u4ec0\u4e48?")),(0,l.kt)("p",{parentName:"li"},"Baggage \u5e94\u8be5\u7528\u4e8e\u6211\u4eec\u53ef\u4ee5\u5411\u7b2c\u4e09\u65b9\u516c\u5f00\u7684\u975e\u654f\u611f\u6570\u636e\uff0c\u56e0\u4e3a\u5b83\u4e0e\u5f53\u524d\u4e0a\u4e0b\u6587\u4e00\u8d77\u5b58\u50a8\u5728 HTTP \u6807\u5934\u4e2d\u3002"),(0,l.kt)("p",{parentName:"li"},"\u5efa\u8bae\u7528\u6765\u4f20\u64ad\u5305\u62ec",(0,l.kt)("strong",{parentName:"p"},"\u5e10\u6237\u6807\u8bc6\u3001\u7528\u6237 ID\u3001\u4ea7\u54c1 ID \u548c\u539f\u59cb IP "),"\u7b49\u5185\u5bb9\u3002\u5c06\u5b83\u4eec\u5411\u4e0b\u4f20\u9012\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u4e0b\u6e38\u670d\u52a1\u4e2d\u7684 Span \u4e2d\uff0c\u4ee5\u4fbf\u5728\u5728\u53ef\u89c2\u5bdf\u6027\u540e\u7aef\u4e2d\u8fdb\u884c\u641c\u7d22\u65f6\u66f4\u8f7b\u677e\u5730\u8fdb\u884c\u8fc7\u6ee4\u3002"))),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/otel_baggage.png",alt:null})),(0,l.kt)("p",null,"\u6bd4\u5982\u8bf4\uff0c\u5728kubegems\u4e2d\u6709\u4e24\u4e2a\u670d\u52a1\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"api")," \u548c",(0,l.kt)("inlineCode",{parentName:"p"},"agent"),"\uff0c\u4ee5\u4e00\u6b21\u7528\u6237\u8bf7\u6c42\u83b7\u53d6k8s\u8d44\u6e90\u4e3a\u4f8b\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"api: \u89e3\u6790\u7528\u6237token\uff0c\u6821\u9a8c\u7528\u6237\u4fe1\u606f\uff0c\u518d\u4ea4\u7ed9",(0,l.kt)("inlineCode",{parentName:"li"},"agent"),"\u83b7\u53d6\u5bf9\u5e94\u96c6\u7fa4\u7684k8s\u8d44\u6e90"),(0,l.kt)("li",{parentName:"ul"},"agent: \u4e0d\u518d\u5904\u7406\u7528\u6237\u4fe1\u606f\uff0c\u76f4\u63a5\u8c03\u7528k8s api\u5e76\u8fd4\u56de")),(0,l.kt)("p",null,"\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5047\u5982\u6211\u4eec\u60f3\u8981\u5728agent\u7684trace\u4fe1\u606f\u4e2d\uff0c\u77e5\u9053\u8fd9\u4e2a\u8bf7\u6c42\u65f6\u54ea\u4e2a\u7528\u6237\u53d1\u8d77\u7684\uff0c\u5c31\u53ef\u4ee5\u501f\u52a9baggage\u6765\u5b9e\u73b0:"),(0,l.kt)("p",null,"\u9996\u5148\uff0c\u521d\u59cb\u5316",(0,l.kt)("inlineCode",{parentName:"p"},"TextMapPropagator"),"\u65f6\uff0c\u9700\u8981\u52a0\u4e0a",(0,l.kt)("inlineCode",{parentName:"p"},"Baggage Propagator"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"    otel.SetTextMapPropagator(propagation.NewCompositeTextMapPropagator(propagation.TraceContext{}, propagation.Baggage{}))\n")),(0,l.kt)("p",null,"\u7136\u540e\uff0c\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"api"),"\u5411",(0,l.kt)("inlineCode",{parentName:"p"},"agent"),"\u53d1\u8d77\u8bf7\u6c42\u65f6\uff0c\u6ce8\u5165",(0,l.kt)("inlineCode",{parentName:"p"},"user name"),"\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"baggage"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "net/http"\n    "go.opentelemetry.io/otel"\n    "go.opentelemetry.io/otel/propagation"\n    "go.opentelemetry.io/otel/baggage"\n)\n\nfunc DoRequest(){\n    ...\n    userBaggage, err := baggage.Parse(fmt.Sprintf("user.id=%d,user.name=%s", user.ID, user.Username))\n    if err != nil {\n        otel.Handle(err)\n    }\n\n    req, err := http.NewRequestWithContext(baggage.ContextWithBaggage(ctx, userBaggage), clientreq.Method, addr, body)\n    if err != nil {\n        return nil, err\n    }\n    otel.GetTextMapPropagator().Inject(req.Context(), propagation.HeaderCarrier(req.Header))\n    http.DefaultClient.Do(req)\n    ...\n}\n')),(0,l.kt)("p",null,"\u6700\u540e\uff0c\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"agent"),"\u89e3\u6790baggage\u5e76\u8bbe\u7f6e\u4e3aattributes:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "go.opentelemetry.io/otel/propagation"\n        "go.opentelemetry.io/otel/baggage"\n)   \n\nfunc HandleRequest(){\n    ...\n    // extract from http.Request by propagator to do distribute tracing\n    ctx := cfg.Propagators.Extract(req.Context(), propagation.HeaderCarrier(req.Header))\n    ctx, span := tracer.Start(ctx, spanName, opts...)\n    defer span.End()\n    \n    reqBaggage := baggage.FromContext(ctx)\n    span.SetAttributes(\n        attribute.String("user.id", reqBaggage.Member("user.id").Value()),\n        attribute.String("user.name", reqBaggage.Member("user.name").Value()),\n    )    \n    req = req.WithContext(ctx)\n    ...\n}\n')),(0,l.kt)("p",null,"\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e",(0,l.kt)("inlineCode",{parentName:"p"},"Baggage"),"\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u9605\u8bfb\u6587\u6863\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/baggage/%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E9%81%B5%E4%BB%8E%60W3C"},"https://www.w3.org/TR/baggage/\uff0c\u56e0\u4e3a\u5b83\u9075\u4ece`W3C")," Baggage format`\u6807\u51c6\u3002"),(0,l.kt)("h4",{id:"\u7406\u89e3propagator"},"\u7406\u89e3propagator"),(0,l.kt)("p",null,"\u65e0\u8bba\u662f",(0,l.kt)("inlineCode",{parentName:"p"},"TraceContext"),"\u8fd8\u662f",(0,l.kt)("inlineCode",{parentName:"p"},"Baggage"),"\uff0c\u5728\u6211\u4eec\u9009\u7528\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"TextMapPropagator"),"\u4e2d\uff0c\u90fd\u662f\u91c7\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"TextMapCarrier"),"\u6765\u5b9e\u73b0"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"// TextMapCarrier is the storage medium used by a TextMapPropagator.\ntype TextMapCarrier interface {\n    ...\n}\n")),(0,l.kt)("p",null,"\u800c",(0,l.kt)("inlineCode",{parentName:"p"},"TextMapCarrier"),"\uff0c\u76ee\u524d\u7684\u552f\u4e00\u5b9e\u73b0\u662f",(0,l.kt)("inlineCode",{parentName:"p"},"HeaderCarrier"),"\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"// HeaderCarrier adapts http.Header to satisfy the TextMapCarrier interface.\ntype HeaderCarrier http.Header\n")),(0,l.kt)("p",null,"\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u7ba1\u6211\u4eec\u91c7\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"http"),"\u8fd8\u662f",(0,l.kt)("inlineCode",{parentName:"p"},"grpc"),"\u534f\u8bae\uff0c\u53ea\u8981\u6211\u4eec\u91c7\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"TextMapPropagator"),"\uff0c\u5b9e\u73b0\u4fe1\u606f\u4f20\u64ad\u7684\uff0c\u662fhttp\u534f\u8bae header\u3002"),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Debug\u6765\u8ffd\u8e2a\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u9996\u5148\uff0c \u5728",(0,l.kt)("inlineCode",{parentName:"p"},"client"),"\u7aef\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"Inject"),"\u65b9\u6cd5\u6253\u4e0a\u65ad\u70b9\uff0c\u89c2\u5bdf\u5b83\u662f\u600e\u4e48\u628a\u8981\u4f20\u64ad\u7684\u4fe1\u606f\u6ce8\u5165\u8fdb\u53bb\u7684\uff1a"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/image-20230203142016813.png",alt:null})),(0,l.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0c\u6ce8\u5165\u524d context \u5df2\u7ecf\u5e26\u6709\u4e86",(0,l.kt)("inlineCode",{parentName:"p"},"user.id"),"\u548c",(0,l.kt)("inlineCode",{parentName:"p"},"user.name"),"\u4fe1\u606f\uff0c\u7136\u540e\u4e0b\u4e00\u6b65\uff1a"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/image-20230203142429754.png",alt:null})),(0,l.kt)("p",null,"\u901a\u8fc7\u628actx\u5e26\u7684\u4fe1\u606f\u6ce8\u5165\u8fdb",(0,l.kt)("inlineCode",{parentName:"p"},"headr"),"\uff0c \u6b64\u65f6\u8bf7\u6c42\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"Header"),"\u4e2d\u5df2\u7ecf\u5e26\u6709\u4e86",(0,l.kt)("inlineCode",{parentName:"p"},"Traceparent"),"\u548c",(0,l.kt)("inlineCode",{parentName:"p"},"Baggage"),"\u4fe1\u606f\u3002"),(0,l.kt)("p",null,"\u7136\u540e\u6211\u4eec\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"server"),"\u7aef\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"Extract"),"\u65b9\u6cd5\u6253\u4e0a\u65ad\u70b9\uff0c\u89c2\u5bdf\u5b83\u662f\u600e\u4e48\u89e3\u6790\u51fa\u4f20\u64ad\u7684\u4fe1\u606f\u7684\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/image-20230203142842480.png",alt:null})),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/image-20230203143250673.png",alt:null})),(0,l.kt)("p",null,"\u5f88\u663e\u7136\uff0c\u5b83\u901a\u8fc7\u4ece",(0,l.kt)("inlineCode",{parentName:"p"},"client"),"\u8bf7\u6c42\u7684header\u4e2d\u63d0\u53d6",(0,l.kt)("inlineCode",{parentName:"p"},"Traceparent"),"\u6765\u83b7\u53d6",(0,l.kt)("inlineCode",{parentName:"p"},"traceID"),"\u548c",(0,l.kt)("inlineCode",{parentName:"p"},"spanID"),",\u6765\u5173\u8054\u4e0a\u4e0b\u6e38\uff0c\u518d\u63d0\u53d6",(0,l.kt)("inlineCode",{parentName:"p"},"Baggage"),"\u6765\u83b7\u53d6\u6765\u81ea",(0,l.kt)("inlineCode",{parentName:"p"},"client"),"\u7684\u4fe1\u606f\u3002"),(0,l.kt)("h4",{id:"\u5176\u4ed6\u5f62\u5f0f\u7684propagator"},"\u5176\u4ed6\u5f62\u5f0f\u7684propagator"),(0,l.kt)("p",null,"\u5bf9\u57fa\u4e8ehttp\u534f\u8bae\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff0c\u6211\u4eec\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"TextMapPropagator"),"\u5b8c\u5168\u8db3\u591f\uff0c\u4f46\u5982\u679c\u8bf4\u8981\u9488\u5bf9\u6ca1\u6709",(0,l.kt)("inlineCode",{parentName:"p"},"HeaderCarrier"),"\u5b9e\u73b0\u7684\u901a\u4fe1\u534f\u8bae\uff0c\u5b98\u65b9\u6709\u8ba1\u5212\u5f00\u53d1",(0,l.kt)("inlineCode",{parentName:"p"},"binary propagator"),"\u6765\u5b9e\u73b0\uff0c \u8be6\u89c1 ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/open-telemetry/opentelemetry-specification/issues/437"},"https://github.com/open-telemetry/opentelemetry-specification/issues/437")),(0,l.kt)("h3",{id:"metricsalpha"},"Metrics\uff08alpha\uff09"),(0,l.kt)("p",null,"\u7531\u4e8eopentelemety go\u6807\u51c6\u5e93\u7684metric\u5b9e\u73b0\u8fd8\u662falpha\uff0c",(0,l.kt)("strong",{parentName:"p"},"\u6781\u4e0d\u7a33\u5b9a"),"\uff0c\u6587\u6863\u51e0\u4e4e\u6ca1\u6709\uff0c\u8bf7\u8c28\u614e\u4f7f\u7528\u3002"),(0,l.kt)("h4",{id:"\u521d\u59cb\u5316-1"},"\u521d\u59cb\u5316"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "context"\n    "go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp"\n    "go.opentelemetry.io/otel/metric/global"\n    sdkmetric "go.opentelemetry.io/otel/sdk/metric"\n)\n\nfunc initMeter(ctx context.Context) (*sdkmetric.MeterProvider, error) {\n    exp, err := otlpmetrichttp.New(ctx)\n    if err != nil {\n        return nil, err\n    }\n    mp := sdkmetric.NewMeterProvider(sdkmetric.WithReader(sdkmetric.NewPeriodicReader(exp, sdkmetric.WithInterval(15*time.Second))))\n    global.SetMeterProvider(mp)\n    return mp, nil\n}\n')),(0,l.kt)("p",null,"\u8981\u6ce8\u610f\u7684\u914d\u7f6e\u4e3b\u8981\u662f",(0,l.kt)("inlineCode",{parentName:"p"},"NewPeriodicReader()"),"\uff0c \u5b83\u7528\u6765\u8bbe\u7f6e\u6211\u4eec\u6536\u96c6\u5e76\u5411",(0,l.kt)("inlineCode",{parentName:"p"},"opentelemetry collector"),"\u53d1\u9001\u6307\u6807\u7684\u65f6\u95f4\u95f4\u9694\u3002"),(0,l.kt)("p",null,"\u5728kubegems\u4e0a\uff0c\u6211\u4eec\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"opentelemetry collector"),"\u4f7f\u7528\u7684\u662f",(0,l.kt)("inlineCode",{parentName:"p"},"pometheus exporter"),"\u6765\u5bfc\u51fa\u76d1\u63a7\u6307\u6807\uff0c\u5e76\u8bbe\u7f6e\u6709",(0,l.kt)("inlineCode",{parentName:"p"},"30s"),"\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"scrape_interval"),"\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u8fd9\u91cc\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"WithInterval()"),"\u6700\u597d\u662f\u5c0f\u4e8e",(0,l.kt)("inlineCode",{parentName:"p"},"30s"),"\u4ee5\u4fdd\u8bc1\u76d1\u63a7\u6570\u636e\u7684\u53ca\u65f6\u6027\u3002"),(0,l.kt)("h4",{id:"\u4f7f\u7528"},"\u4f7f\u7528"),(0,l.kt)("p",null,"\u4ee5\u4e0b\u7684\u793a\u4f8b\u662fkubegems\u4e3a",(0,l.kt)("inlineCode",{parentName:"p"},"gin"),"\u6846\u67b6\u6dfb\u52a0\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"metrics"),"\u5b9e\u73b0\uff0c\u53c2\u7167\u4e86",(0,l.kt)("inlineCode",{parentName:"p"},"net/http"),"\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"opentelemetry"),"\u5b9e\u73b0\uff08",(0,l.kt)("a",{parentName:"p",href:"https://github.com/open-telemetry/opentelemetry-go-contrib/tree/main/instrumentation/net/http/otelhttp%EF%BC%89%EF%BC%8C%E8%AE%B0%E5%BD%95%E4%BA%86%E4%B8%A4%E4%B8%AA%E6%8C%87%E6%A0%87"},"https://github.com/open-telemetry/opentelemetry-go-contrib/tree/main/instrumentation/net/http/otelhttp\uff09\uff0c\u8bb0\u5f55\u4e86\u4e24\u4e2a\u6307\u6807"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"http.server.request_count"),": \u8bf7\u6c42\u603b\u91cf"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"http.server.duration"),"\uff1a\u8bf7\u6c42\u8017\u65f6\uff08ms)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "time"\n\n    "github.com/gin-gonic/gin"\n    "go.opentelemetry.io/otel"\n    "go.opentelemetry.io/otel/metric/global"\n    "go.opentelemetry.io/otel/metric/instrument/syncfloat64"\n    "go.opentelemetry.io/otel/metric/instrument/syncint64"\n    "go.opentelemetry.io/otel/propagation"\n    semconv "go.opentelemetry.io/otel/semconv/v1.12.0"\n)\n\n// Server HTTP metrics.\nconst (\n    RequestCount          = "http.server.request_count"           // Incoming request count total\n    ServerLatency         = "http.server.duration"                // Incoming end to end duration, microseconds\n)\n\nconst (\n    instrumentationName = "go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp"\n)\n\nvar (\n    counters       map[string]syncint64.Counter\n    valueRecorders map[string]syncfloat64.Histogram\n)\n\nfunc MeterMiddleware(service string) gin.HandlerFunc {\n    counters = make(map[string]syncint64.Counter)\n    valueRecorders = make(map[string]syncfloat64.Histogram)\n    meter := global.MeterProvider().Meter(instrumentationName)\n\n    requestCounter, _ := meter.SyncInt64().Counter(RequestCount)\n    serverLatencyMeasure, _ := meter.SyncFloat64().Histogram(ServerLatency)\n\n    counters[RequestCount] = requestCounter\n    valueRecorders[ServerLatency] = serverLatencyMeasure\n    return func(c *gin.Context) {\n        requestStartTime := time.Now()\n        attributes := semconv.HTTPServerMetricAttributesFromHTTPRequest(service, c.Request)\n        ctx := otel.GetTextMapPropagator().Extract(c.Request.Context(), propagation.HeaderCarrier(c.Request.Header))\n\n        c.Next()\n        // Use floating point division here for higher precision (instead of Millisecond method).\n        // \u7531\u4e8eBucket\u5206\u8fa8\u7387\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u53ea\u80fd\u8bb0\u5f55\u4e3amillseconds\u800c\u4e0d\u662fseconds\n        elapsedTime := float64(time.Since(requestStartTime)) / float64(time.Millisecond)\n        counters[RequestCount].Add(ctx, 1, attributes...)\n        valueRecorders[ServerLatency].Record(ctx, elapsedTime, attributes...)\n    }\n}\n')),(0,l.kt)("h3",{id:"log-not-implemented-yet"},"Log (not implemented yet)"),(0,l.kt)("p",null,"opentelemetry \u76ee\u524d\u8fd8\u672a\u9488\u5bf9go\u6709\u76f8\u5173\u7684\u5b9e\u73b0\u3002"),(0,l.kt)("p",null,"\u4f46\u662f\uff0c\u5047\u5982\u6211\u4eec\u7684\u5e94\u7528\u8fd0\u884c\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"kubegems"),"\u4e0a\uff0c\u5176\u4e2d\u7684\u65e5\u5fd7\u6536\u96c6\u3001\u67e5\u8be2\u529f\u80fd\u672c\u8eab\u5c31\u63d0\u4f9b\u4e86\u76f8\u5173\u7684\u80fd\u529b\uff0c\u6240\u4ee5\u5728\u5b98\u65b9\u7684\u6807\u51c6\u63a8\u51fa\u4e4b\u524d\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5148\u901a\u8fc7",(0,l.kt)("inlineCode",{parentName:"p"},"span.SpanContext().TraceID()"),"\u83b7\u53d6",(0,l.kt)("inlineCode",{parentName:"p"},"trace-id"),"\uff0c\u81ea\u884c\u5728\u65e5\u5fd7\u4e2d\u6253\u5370",(0,l.kt)("inlineCode",{parentName:"p"},"trace-id"),"\uff0c\u6765\u5b9e\u73b0",(0,l.kt)("inlineCode",{parentName:"p"},"trace-log"),"\u5173\u8054\u3002"),(0,l.kt)("p",null,"\u4e0b\u9762\u4ee5gin \u548cbeego\u6846\u67b6\u4e3a\u4f8b\uff0c\u7b80\u5355\u8bb2\u89e3\u4e00\u4e0b\uff1a"),(0,l.kt)("p",null,"gin\u53ef\u4ee5\u6dfb\u52a0\u4e2a\u6253\u5370\u65e5\u5fd7\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"middleware"),"\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'func logMiddleware() gin.HandlerFunc {\n    return func(c *gin.Context) {\n        start := time.Now()\n        ctx := otel.GetTextMapPropagator().Extract(c.Request.Context(), propagation.HeaderCarrier(c.Request.Header))\n        span := trace.SpanFromContext(ctx)\n\n        c.Next()\n        statusCode := c.Writer.Status()\n        logrus.WithFields(logrus.Fields{\n            "method":   c.Request.Method,\n            "path":     c.Request.URL.Path,\n            "trace-id": span.SpanContext().TraceID(),\n            "code":     statusCode,\n            "latency":  time.Since(start).String(),\n            "sampled":  span.SpanContext().IsSampled(),\n        }).Info(http.StatusText(statusCode))\n    }\n}\n')),(0,l.kt)("p",null,"beego\u53ef\u4ee5\u6dfb\u52a0\u4e2a",(0,l.kt)("inlineCode",{parentName:"p"},"filter"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    beego.InsertFilter("*", beego.BeforeRouter, func(c *bcontext.Context) {\n        ctx := otel.GetTextMapPropagator().Extract(c.Request.Context(), propagation.HeaderCarrier(c.Request.Header))\n        newctx, span := tracer.Start(ctx, "getUserFromBaggage")\n        defer span.End()\n        logrus.WithFields(logrus.Fields{\n            "method":   c.Request.Method,\n            "path":     c.Request.URL.Path,\n            "trace-id": span.SpanContext().TraceID(),\n            "sampled":  span.SpanContext().IsSampled(),\n        }).Info("handle request")\n\n        reqBaggage := baggage.FromContext(newctx)\n        span.SetAttributes(\n            attribute.String("user.id", reqBaggage.Member("user.id").Value()),\n            attribute.String("user.name", reqBaggage.Member("user.name").Value()),\n        )\n        c.Request = c.Request.WithContext(newctx)\n    })\n')),(0,l.kt)("h2",{id:"kubegems\u63a5\u5165opentelemetry"},"Kubegems\u63a5\u5165Opentelemetry"),(0,l.kt)("p",null,"\u5047\u5982\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5df2\u7ecf\u5728\u4ee3\u7801\u5c42\u9762\u63a5\u5165\u4e86opentelemetry\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e3a\u5176\u6dfb\u52a0\u51e0\u4e2a\u73af\u5883\u53d8\u91cf\uff08\u4e3a\u7edf\u4e00kubegems\u4e0a\u5e94\u7528\u7a0b\u5e8f\u7684\u63a5\u5165\uff0c\u4e0d\u5efa\u8bae\u4fee\u6539\uff09:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"    - name: OTEL_K8S_NODE_NAME\n      valueFrom:\n        fieldRef:\n          apiVersion: v1\n          fieldPath: spec.nodeName\n    - name: OTEL_K8S_POD_NAME\n      valueFrom:\n        fieldRef:\n          apiVersion: v1\n          fieldPath: metadata.name\n    - name: OTEL_SERVICE_NAME\n      valueFrom:\n        fieldRef:\n          apiVersion: v1\n          fieldPath: metadata.labels['app']\n    - name: OTEL_K8S_NAMESPACE\n      valueFrom:\n        fieldRef:\n          apiVersion: v1\n          fieldPath: metadata.namespace\n    - name: OTEL_RESOURCE_ATTRIBUTES\n      value: service.name=$(OTEL_SERVICE_NAME),namespace=$(OTEL_K8S_NAMESPACE),node=$(OTEL_K8S_NODE_NAME),pod=$(OTEL_K8S_POD_NAME)\n    - name: OTEL_EXPORTER_OTLP_ENDPOINT\n      value: http://opentelemetry-collector.observability:4318 # grpc change to 4317 port\n    - name: OTEL_EXPORTER_OTLP_INSECURE\n      value: \"true\"\n")),(0,l.kt)("h3",{id:"\u793a\u4f8b\u7a0b\u5e8f"},"\u793a\u4f8b\u7a0b\u5e8f"),(0,l.kt)("p",null,"\u6211\u4eec\u901a\u8fc7\u793a\u4f8b\u7a0b\u5e8f ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/jojotong/otel-demo"},"otel-demo"),"\u6765\u6f14\u793a\u3001\u4f7f\u7528opentelemetry\u57fa\u672c\u529f\u80fd\uff0c\u8be5demo\u529f\u80fd\u5982\u4e0b\uff1a"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/image-20230209184206292.png",alt:null})),(0,l.kt)("h3",{id:"\u4ee3\u7801\u6f14\u793a"},"\u4ee3\u7801\u6f14\u793a"),(0,l.kt)("p",null,"\u83b7\u53d6\u4ee3\u7801\u5e76\u90e8\u7f72:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/jojotong/otel-demo.git\n$ cd otel-demo\n$ make build docker-build docker-push deploy\n")),(0,l.kt)("p",null,"\u91cd\u70b9\uff1asampler, propagator, baggage\u4f7f\u7528\uff0cgorm\u63a5\u5165"),(0,l.kt)("h3",{id:"kubegems\u529f\u80fd\u6f14\u793a"},"kubegems\u529f\u80fd\u6f14\u793a"),(0,l.kt)("p",null,"\u91cd\u70b9\uff1atrace, metric, log \u8054\u52a8\u67e5\u8be2"),(0,l.kt)("h4",{id:"\u5e94\u7528\u6027\u80fd"},"\u5e94\u7528\u6027\u80fd"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/20230210180904.png",alt:null}),"\n",(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/20230210180918.png",alt:null}),"\n",(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/20230210181435.png",alt:null})),(0,l.kt)("h4",{id:"trace\u8be6\u60c5"},"trace\u8be6\u60c5"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/20230210181009.png",alt:null})),(0,l.kt)("h4",{id:"trace---log"},"trace -> log"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/20230210181106.png",alt:null})),(0,l.kt)("h4",{id:"log---monitor"},"log -> monitor"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://kubegems.oss-cn-chengdu.aliyuncs.com/kubegems.io/20230210181130.png",alt:null})))}g.isMDXComponent=!0}}]);