"use strict";(self.webpackChunkkubegems_docs=self.webpackChunkkubegems_docs||[]).push([[5766],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return u}});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),p=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(t),u=r,g=d["".concat(l,".").concat(u)]||d[u]||m[u]||a;return t?o.createElement(g,i(i({ref:n},c),{},{components:t})):o.createElement(g,i({ref:n},c))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},64850:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return m}});var o=t(87462),r=t(63366),a=(t(67294),t(3905)),i=["components"],s={title:"ModelDeployment",hide_title:!0,sidebar_position:5,description:"\u6a21\u578b\u90e8\u7f72\u7684CRD \u91ca\u4e49",keywords:["kubegems","modelx","modeldeployment"]},l=void 0,p={unversionedId:"ai-applications/modelx/modeldeploy",id:"ai-applications/modelx/modeldeploy",title:"ModelDeployment",description:"\u6a21\u578b\u90e8\u7f72\u7684CRD \u91ca\u4e49",source:"@site/docs/ai-applications/modelx/modeldeploy.mdx",sourceDirName:"ai-applications/modelx",slug:"/ai-applications/modelx/modeldeploy",permalink:"/docs/ai-applications/modelx/modeldeploy",editUrl:"https://github.com/kubegems/kubegems.io/edit/main/docs/ai-applications/modelx/modeldeploy.mdx",tags:[],version:"current",lastUpdatedBy:"LinkMaq",lastUpdatedAt:1676260482,formattedLastUpdatedAt:"2023/2/13",sidebarPosition:5,frontMatter:{title:"ModelDeployment",hide_title:!0,sidebar_position:5,description:"\u6a21\u578b\u90e8\u7f72\u7684CRD \u91ca\u4e49",keywords:["kubegems","modelx","modeldeployment"]},sidebar:"tutorialSidebar",previous:{title:"ModelX API",permalink:"/docs/ai-applications/modelx/modelx api"},next:{title:"MLServer \u63a8\u7406\u6846\u67b6",permalink:"/docs/category/mlserver-\u63a8\u7406\u6846\u67b6"}},c={},m=[{value:"ModelDeployment CRD",id:"modeldeployment-crd",level:2}],d={toc:m};function u(e){var n=e.components,t=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"modeldeployment-crd"},"ModelDeployment CRD"),(0,a.kt)("p",null,"\u4ee5\u4e0bCR \u662f ModelDeployment \u8d44\u6e90\u7684\u5b8c\u6574\u91ca\u4e49\uff0c\u901a\u8fc7 KubeGems \u6a21\u578b\u5546\u5e97\u90e8\u7f72\u7684\u7b97\u6cd5\u63a8\u7406\u670d\u52a1\u53ef\u5728\u5e94\u7528\u4e2d\u5fc3\u5bf9\u5df2\u90e8\u7f72\u7684\u7b97\u6cd5\u8fdb\u884c\u6301\u7eed\u4fee\u6539\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'kind: ModelDeployment\napiVersion: models.kubegems.io/v1beta1\nmetadata:\n  name: gpt2\n  namespace: default\nspec:\n  replicas: 1\n  model:\n    source: huggingface     # \u6a21\u578b\u6765\u6e90\n    name: library/gpt2      # \u6a21\u578b\u540d\u79f0\n    version: v3.1.0         # \u6a21\u578b\u7248\u672c\n    url: "https://modelx.kubegems.io"  # \u7b97\u6cd5\u670d\u52a1\u6ce8\u518c\u5230\u7f51\u5173\u7684\u9ed8\u8ba4\u57df\u540d\n    token: "<token>"        # \u6a21\u578b Token\uff0c\u4ece modelxd \u670d\u52a1\u4e2d\u7b7e\u53d1\n    task: text-generation\n  server:\n    # seldon server protocol,ref: https://docs.seldon.io/projects/seldon-core/en/latest/graph/protocols.html#graph-protocols--page-root\n    protocol: v2 \n    # replace default seldon server image\n    image: "some/custom-image:latest" \n    # seldon implementation, ref: https://docs.seldon.io/projects/seldon-core/en/latest/servers/overview.html#servers-overview--page-root\n    kind: HUGGINGFACE_SERVER \n    # init container, ref: https://docs.seldon.io/projects/seldon-core/en/latest/servers/overview.html#init-containers\n    storageInitializerImage: "docker.io/kubegems/modelx-dl:latest"\n    mounts:\n      # \u6a21\u578b\u6302\u8f7d\u8def\u5f84\n      - kind: Model\n        mountPath: /app/model-files \n      # \u6302\u8f7d HostPath \uff08\u53ef\u9009\uff09\n      - kind: HostPath\n        mountPath: /host-path\n        source: /host-path\n      # \u6302\u8f7d ConfigMap\uff08\u53ef\u9009\uff09\n      - kind: ConfigMap\n        mountPath: /config\n        source: configmap-name\n      # \u6302\u8f7d PersistentVolume\uff08\u53ef\u9009\uff09\n      - kind: PVC\n        mountPath: /data\n        source: some-pvc-name\n      # \u6302\u8f7d EmptyDir\uff08\u53ef\u9009\uff09\n      - kind: EmptyDir\n        mountPath: /tmp\n      # \u6302\u8f7d Secret\uff08\u53ef\u9009\uff09\n      - kind: Secret\n        mountPath: /certs\n        source: some-secret-name\n    parameters:\n      - name: task\n        value: text-generation\n      - name: pretrained_model\n        value: gpt2\n    # \u8fd0\u884c\u7279\u6743\u6a21\u5f0f\n    privileged: true \n    # \u81ea\u5b9a\u4e49\u542f\u52a8\u547d\u4ee4\n    command:\n      - run.py\n    # \u81ea\u5b9a\u4e49\u542f\u52a8\u53c2\u6570\n    args:\n      - --arg-foo=value\n    # \u81ea\u5b9a\u4e49\u73af\u5883\u53d8\u91cf\n    env:\n      - name: ENV_NAME\n        value: env_value\n      - name: ENV_FOO\n        valueFrom: # container\'s valueFrom\n          configMapKeyRef:\n            key: some-config\n            name: "key_foo"\n    # \u81ea\u5b9a\u4e49\u670d\u52a1\u7aef\u53e3\n    ports:\n      - name: http # seldon \u9ed8\u8ba4\u4ec5\u66b4\u9732\u540d\u79f0\u4e3a http \u548c grpc \u7684\u7aef\u53e3\u5230 service\n        containerPort: 8080\n      - name: grpc\n        containerPort: 50051\n      - name: other-port # \u5176\u4ed6\u540d\u79f0\u7684\u7aef\u53e3\u65e0\u6cd5\u5728seldon service\u4e0a\u66b4\u9732\u51fa\u6765\n        containerPort: 1234\n    # \u81ea\u5b9a\u4e49\u8d44\u6e90\u9650\u5236\n    resources:\n      limits:\n        cpu: "2"\n        memory: 4Gi\n      requests:\n        cpu: 100m\n        memory: 100Mi\n    upgradeStrategy: RollingUpdate # deployment strategy\n    # pod\u76f8\u5173\u5c5e\u6027,containers\u540d\u79f0\u5fc5\u987b\u8bbe\u7f6e\u4e3a model\n    podSpec:\n      contaienrs:\n        - name: model\n      # \u5176\u4f59 pod \u7684\u7279\u6027\u53ef\u53c2\u8003 podspec api \u63cf\u8ff0\n      # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#podspec-v1-core\n      nodeSelector:\n        kubernetes.io/hostname: kubegems-gpu-1\n  # ingress \u914d\u7f6e\n  ingress:\n    host: api.models.kubegems.io # ingress host\n    className: "ingress-nginx" # nginx ingress class name\n    gatewayName: default-gateway # kubegems gateway name\n\n')))}u.isMDXComponent=!0}}]);